.svgArrow(@Color)
{
	background-image: url('data:image/svg+xml;utf8,<?xml version="1.0" ?><svg style="enable-background:new 0 0 24 24;" version="1.1" viewBox="0 0 24 24" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" > <g id="info"/> <g id="icons"> <path fill="@{Color}" d="M3.9,18.9V5.1c0-1.6,1.7-2.6,3-1.8l12,6.9c1.4,0.8,1.4,2.9,0,3.7l-12,6.9C5.6,21.5,3.9,20.5,3.9,18.9z" id="play"/> </g> </svg>	');
	background-repeat: no-repeat;
}

.svgSearch(@Color)
{
	background-image: url("data:image/svg+xml;utf8,<?xml version='	1.0'	 ?><!DOCTYPE svg  PUBLIC '-//W3C//DTD SVG 1.1//EN'  'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'><svg enable-background='	new 0 0 139 139'	 height='	139px'	 id='	Find'	 version='	1.1'	 viewBox='	0 0 139 139'	 width='	139px'	 xml:space='	preserve'	 xmlns='	http://www.w3.org/2000/svg'	 xmlns:xlink='	http://www.w3.org/1999/xlink'	><path fill='	@{Color}'	 d='	M127.558,111.961L100.249,84.65c4.64-7.387,7.333-16.118,7.333-25.488c0-26.509-21.49-47.996-47.998-47.996  c-26.508,0-47.996,21.487-47.996,47.996c0,26.51,21.487,47.995,47.996,47.995c10.197,0,19.642-3.188,27.414-8.605l26.984,26.986  c1.875,1.873,4.333,2.806,6.788,2.806c2.458,0,4.913-0.933,6.791-2.806C131.308,121.787,131.308,115.711,127.558,111.961z   M59.584,91.607c-17.917,0-32.443-14.525-32.443-32.443S41.667,26.72,59.584,26.72c17.918,0,32.443,14.526,32.443,32.444  S77.502,91.607,59.584,91.607z'	/></svg>");
	background-repeat: no-repeat;
}

.svgDownArrow(@Color)
{
	.svgArrow(@Color);
	transform: rotate(90deg);
}

.nonSelectable()
{
	// - Disable select on this element
	user-select: none;
	-moz-user-select: none;
	-khtml-user-select: none;
	-webkit-user-select: none;
	-o-user-select: none;

	// - Normal cursor
	cursor: default;
}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//
//		Text box mixin style
//
//	Parameters:
//
//	@FontSize   	[px]    : Textbox font size (height)
//	@Width 			[px]    : Textbox with in pixels
//	@BorderBottom   [bool]  : If true it shows a line under the textbox
//	@Arrow			[bool]  : If true it shows a little arrow at the textbox beginning
//	@UIColor 		[color] : If set it will fill the arrow and the line with a solid color
//
.DefaultTextbox(@FontSize, @Width, @BorderBottom : true, @Arrow : false, @UIColor : 'null')
{
	input[type="text"],
	input[type="password"]
	{
		outline: none;

		width: @Width;

		// - Border
		& when (@BorderBottom = true)
		{
			border: none;
			border-bottom: 1px solid #BBB;
		}
		
		& when (@BorderBottom = false)
		{
			border: none;
		}

		// - Text positioning
		padding-left: 5px;

		// - Font and style
		font-size: @FontSize;
		font-family: 'avenir';
		color: #BBB;

		&:focus
		{
			& when (@Arrow = true)
			{
				.svgArrow('#333');
			}

			& when (@Arrow = false) 
			{
				background: transparent;
			}


			// - Active border
			& when (@BorderBottom = true)
			{
				border-bottom: 1px solid #333;
			}

			// - Active text
			color: #333;
		}

		// - Arrow
		& when (@Arrow = true) 
		{
			// - SVG colored arrow
			.svgArrow('#BBB');

			background-size: @FontSize / 1.5 @FontSize / 1.5;
			background-repeat: no-repeat;
			background-position: 0% 45%;

			padding-left: @FontSize !important;
		}

		& when (@Arrow = false) 
		{
			background: transparent;
		}

		// - Error style
		& when (iscolor(@UIColor)) 
		{
			& when (@Arrow = true)
			{
				.svgArrow('@{UIColor}') !important;
			}

			& when (@Arrow = false) 
			{
				background: transparent;
			}

			// - Active border
			& when (@BorderBottom = true)
			{
				border-bottom: 1px solid @UIColor !important;
			}
		}
	}
}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//
//		Check box mixin style
//
//	Parameters:
//
//	@Size 		[px]    : Checkbox size in pixels
//	@Color 		[Color] : Checkbox color (optional)
//
.DefaultCheckbox(@Size, @Color : #333)
{
	input[type=checkbox]
	{
		// Hide system default checkbox
		-webkit-appearance: none;
		outline: none;

		// Adjust textbox size
		font-size: @Size;

		// Set awesome font!
		font-family: fontAwesome;
		color: @Color;

		&:before
		{
			content: '\F0C8';
		}

		&:checked:before
		{
			content: '\F14A';
		}

		&:disabled
		{
			&:before
			{
				content: '\F0FE';
			}

			color: #BBB !important;
		}
	}
}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//
//		Check box mixin style
//
//	Parameters:
//
//	@Size 		[px]    : Checkbox size in pixels
//	@Color 		[Color] : Checkbox color (optional)
//
.AppleCheckbox(@Size, @Color : #333)
{
	input[type=checkbox]
	{
		// Hide system default checkbox
		-webkit-appearance: none;
		outline: none;

		// Adjust textbox size
		font-size: @Size;

		// Set awesome font!
		font-family: fontAwesome;
		color: @Color;

		&:before
		{
			content: '\F204';
		}

		&:checked:before
		{
			content: '\F205';
		}

		&:disabled
		{
			color: #BBB !important;
		}
	}
}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//
//		Radio button mixin style
//
//	Parameters:
//
//	@Size 		[px]    : Checkbox size in pixels
//	@Color 		[Color] : Checkbox color (optional)
//
.DefaultRadiobutton(@Size, @Color : #333)
{
	input[type=radio]
	{
		// Hide system default radiobutton
		-webkit-appearance: none;
		outline: none;

		// Adjust textbox size
		font-size: @Size;

		// Set awesome font!
		font-family: fontAwesome;
		color: @Color;

		&:before
		{
			content: '\F10C';
		}

		&:checked:before
		{
			content: '\F192';
		}

		&:active:before
		{
			content: '\F111';
		}

		&:disabled
		{
			color: #BBB !important;
		}
	}
}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//
//		Slider mixin style
//
//	Parameters:
//
//	@Width 	[px] : Slider width in pixels
//
.DefaultSlider(@Width : 200px)
{
	div
	{
		width: @Width;

		input[type=range]
		{
			// Hides the slider so that custom slider can be made
			-webkit-appearance: none;

			// Specific width is required for Firefox.
			width: @Width;

			// Otherwise white in Chrome
			background: transparent;

			// Remove browser outline
			outline: none;

			.Slider()
			{
				-webkit-appearance: none;

				height: 36px;
				width: 16px;

				cursor: pointer;

				// For chrome
				margin-top: -14px;

				.svgDownArrow(#555);
				background-position: center;
			}


			&::-webkit-slider-runnable-track 
			{
				width: 100%;
				height: 12px;
				cursor: pointer;

				background: transparent;

				border-bottom: 1px solid #555;
			}

			&::-webkit-slider-thumb { .Slider(); } 
			&::-ms-thumb { .Slider(); }
		}
		
		p
		{
			// Font label
			font-family: avenir;
			font-size: 14px;
			color: #999;

			.nonSelectable();

			text-align: left;

			// Label position
			margin: 0px;

			span
			{
				// Value position
				float: right;
			}
		}
	}
}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//
//		Default button mixin style
//
//	Parameters:
//
//	@Size 			[px]    : Button font size in pixels
//	@IconColor 		[Color] : Button color (optional)
//
.DefaultButton(@Size, @Color : #999)
{
	button
	{
		// - Line animation
		-webkit-transition: all 300ms 0s ease-in-out;
		transition: all 300ms 0s ease-in-out;

		// - Reset button style
		border: none;
		background: transparent;
		outline: none;

		// - Cursor for buttons
		cursor: pointer !important;

		// - Text settings
		color: #444;
		font-size: @Size;

		// - Bottom line
		border-bottom: 1px solid #CCC;

		// - Hide arrow overflow
		overflow: hidden;

		.nonSelectable();

		span
		{
			// - Text padding
			padding-left: 3px !important;
		}
	}

	button:before
	{
		// - To set empty
		content: "";

		.svgArrow(@Color);

		// - Arrow animation transition type
		-webkit-transition: all 300ms 0s ease-in-out;
		transition: all 300ms 0s ease-in-out;

		// - Arrow settings
		background-size: @Size / 1.5 @Size / 1.5;
		background-repeat: no-repeat;
		background-position: 0% 50%;

		// - Arrow size
		height: @Size / 1.5;
		width: @Size / 1.5;

		// - Adjust style
		display: inline-block;
		margin: 0px;
	}

	button:hover:before
	{
		// - Arrow animation
		-webkit-transform: rotate(90deg);
		transform: rotate(90deg);
	}

	button:active:before
	{
		// - Arrow animation
		-webkit-transform: translate(0px, 100px);
		transform: translate(0px, 100px);
	}

	button:disabled
	{
		color: #CCC !important;

		cursor: default !important;
	}

	button:disabled:before
	{
		.svgArrow(#CCC);

		// - Arrow animation clear
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
		-webkit-transform: translate(0px, 0px);
		transform: translate(0px, 0px);
	}
}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//
//		Font awesome button mixin style
//
//	Parameters:
//
//	@Size 			[px]    : Button size in pixels
//	@IconColor 		[Color] : Button color (optional)
//	@ActiveColor	[Color] : Button color during press action (optional)
//	@HoverColor 	[Color] : Button color in hover status (optional)
//	@DisabledColor 	[Color] : Button color disabled (optional)
//	@TextColor 		[Color] : Label color (optional)
//	@TextSize 		[px]    : Button label size in pixels (optional)
//
.FontAwesomeButton(@Size, @IconColor : #999, @ActiveColor : #222, @HoverColor : #555, @DisabledColor : #CCC, @TextColor : #222, @TextSize : @Size)
{
	button
	{
		// - Reset button style
		border: none;
		background: transparent;
		outline: none;

		width: @Size;
		height: @Size;

		// - Cursor for buttons
		cursor: pointer !important;

		i
		{
			// - Icon
			font-size: @Size !important;
			color: @IconColor !important;

			margin-right: 5px;
		}

		// - Label font
		color: @TextColor;
		font-size: @TextSize;

		// - Icon align
		vertical-align: middle;

		.nonSelectable();
	}

	button:hover
	{
		i
		{
			color: @HoverColor !important;
		}
	}

	button:active
	{
		i
		{
			color: @ActiveColor !important;
		}
	}

	button:disabled
	{
		i
		{
			color: @DisabledColor !important;
		}
	}
}


////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//
//		Select mixin style
//
//	Parameters:
//
//	@Width 			[px]    : Box width
//	@MaxHeight 		[px]    : List max height
//	@FontSize 		[px]    : All text font size
//
.SelectQuery(@Width, @MaxHeight, @FontSize : 15px)
{
	div
	{
		// - Positioning for content
		position: relative;
		text-align: left;

		width: @Width;

		// - Reset style
		font-weight: normal;

		button
		{
			// - Border
			padding-bottom: 3px;
			border: none;
			border-bottom: 1px solid #AAA;
			outline: none;

			// - Background
			background: transparent;

			// - Font
			font-size: @FontSize;
			color: #444;
			text-align: left;

			// - Size
			width: @Width;

			// - Pointer
			cursor: pointer;

			&:hover
			{
				// - Border
				border-bottom: 1px solid #444;
			}

			&:after
			{
				// - Arrow animation transition type
				-webkit-transition: all 300ms 0s ease-in-out;
				transition: all 300ms 0s ease-in-out;

				// - Symbol
				content: '\F078';

				// - Set symbol font
				font-family: fontAwesome;
				font-size: @FontSize / 1.2;
				color: #888;

				// - Positioning
				margin-left: 5px;
				margin-top: 3px;
				display: inline-block;
				float: right;
			}

			&:hover:after
			{
				// - Color change
				color: #333;

				// - Arrow animation
				-webkit-transform: rotate(90deg);
				transform: rotate(90deg);
			}
		}

		.optionsMenu
		{
			// - Border
			border: 1px solid #CCC;
			border-radius: 5px;

			width: @Width;

			// - Positioning
			position: absolute;
			top: @FontSize + 15;
			left: 0px;
			z-index: 10000;

			// - State
			background: #FFF;
			display: none;

			// - Positioning
			text-align: left;

			.searchbox
			{
				// - Box style
				border-bottom: 1px solid #CCC;
				background-color: #FFF;

				// - Overlay
				z-index: 100000;

				// - Custom positioning
				padding-top: 5px;
				padding-bottom: 5px;

				// - Size
				height: 20px;

				input
				{
					// - Reset style
					outline: none;
					background: transparent;
					border: none;

					// - Font style
					font-size: 16px;
					color: #555;

					// - Positioning
					padding-left: 23px;
					margin-left: 10px;

					// - Background (lens)
					.svgSearch(#555);
					background-size: 17px 17px;
					background-repeat: no-repeat;
					background-position: 0% 50%;
				}
			}

			ul
			{
				// - Reset positioning
				padding: 0px;
				margin: 0px;

				// - List height
				overflow-y: scroll;
				overflow-x: hidden;
				max-height: @MaxHeight;

				li
				{
					// - Reset style
					list-style: none;

					// - Custom positioning
					margin-left: 10px;
					margin-right: 10px;
					padding-top: 7px;
					padding-bottom: 4px;

					// - Borders and style
					border-bottom: 1px solid #DDD;
					color: #555;

					&:last-child
					{
						border: none !important;
					}

					&:hover
					{
						color: #999;

						cursor: pointer;
					}

					.title
					{

					}

					.description
					{
						font-size: @FontSize / 1.5;
						color: #888;

						margin-top: -3px;
						margin-left: 5px;
					}
				}
			}
		}
	}
}


////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

//
//		Default confirm button mixin style
//
//	Parameters:
//
//	@FontSize 		[px]    : Text font size
//	@Color  		[Color] : Button background color
//	@TextColor 		[Color] : Text color
//
.DefaultConfirmButton(@FontSize, @Color, @TextColor)
{
	button.open
	{
		max-width: 500px !important;

		transition: max-width 0.4s ease-in;
		-ms-transition: max-width 0.4s ease-in;
		-moz-transition: max-width 0.4s ease-in;
		-webkit-transition: max-width 0.4s ease-in;
	}

	button
	{
		transition: max-width 0.4s ease-in;
		-ms-transition: max-width 0.4s ease-in;
		-moz-transition: max-width 0.4s ease-in;
		-webkit-transition: max-width 0.4s ease-in;

		// - Reset all styles
		border: none;
		outline: none;
		background: @Color;

		// - Text
		color: @TextColor;
		font-size: @FontSize;

		// - Positioning
		padding-top: 5px;
		padding-bottom: 3px;
		padding-left: 9px;
		padding-right: 8px;

		// - Borders
		border-radius: 5px;

		// - Oveflow
		overflow: hidden;
		max-width: @FontSize * 1.9;

		cursor: pointer;

		&:active
		{
			filter: brightness(30%) !important;
		}

		&:hover
		{
			filter: brightness(90%);
		}

		&:disabled
		{
			background-color: #AAA !important;
		}

		div
		{
			display: inline;
			white-space: nowrap;

			span
			{
				margin-left: 10px;
			}

			i
			{
			}
		}	
	}
}

.DefaultNumberbox(@FontSize, @Width)
{
	input
	{
		// - Reset default styles
		outline: none;
		border: none;

		// - Border
		border-bottom: 1px solid #777;

		// - Font
		font-size: @FontSize;
		font-family: avenir;

		// - Size
		width: @Width
	}

	input[type=number]::-webkit-inner-spin-button 
	{ 
		-webkit-appearance: none;
		cursor:pointer;
		display:block;
		width:8px;
		color: #333;
		text-align:center;
		position:relative;
	}

	input[type=number]::-webkit-inner-spin-button:before,
	input[type=number]::-webkit-inner-spin-button:after 
	{
		content: "a";
		position:absolute;
		right: 0;
		font-family:monospace;
	}

	input[type=number]::-webkit-inner-spin-button:before 
	{
		top:0px;
	}

	input[type=number]::-webkit-inner-spin-button:after 
	{
		bottom:0px;
		-webkit-transform: rotate(180deg);
	}
}

.defaultColor()
{
	input[type="color"]::-webkit-color-swatch-wrapper 
	{
		padding: 0px;
	}

	input[type="color"]::-webkit-color-swatch 
	{
		border: none;
		border-radius: 5px;
	}

	input
	{
		padding: 0px;
		outline: none;
		background: transparent;

		box-shadow: 0 0 0 1px #000;
		border: 1px solid #FFF;
		border-radius: 5px;

		width: 30px;
		height: 30px;
	}
}

defaultcolor
{
	.defaultColor();
}

selectquery
{
	.SelectQuery(200px, 200px);
}

textbox
{
	.DefaultTextbox(20px, 200px, true, true);
}

checkbox
{
	.DefaultCheckbox(15px);
}

.apple
{
	.AppleCheckbox(15px) !important;
}

radiobutton
{
	.DefaultRadiobutton(15px);
}

slider
{
	.DefaultSlider(200px);
}

fa-button
{
	.FontAwesomeButton(30px);
}

default-button
{
	.DefaultButton(20px, #3ADBD3);
}

confirmButton
{
	.DefaultConfirmButton(18px, #36BC96, #FFF);
}

numberbox
{
	.DefaultNumberbox(17px, 50px);
}
